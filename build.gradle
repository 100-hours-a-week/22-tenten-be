plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'

    // Sentry Gradle Plugin
    id "io.sentry.jvm.gradle" version "5.5.0"

    // Checkstyle Plugin - 코드 스타일 검사
    id 'checkstyle'

    // SpotBugs Plugin - 코드 품질 검사
    id 'com.github.spotbugs' version '6.1.12'

    // PMD Plugin - 코드 스멜/잠재적 버그 검사
    id 'pmd'
}

checkstyle {
    toolVersion = '10.24.0'
    configFile = file("config/checkstyle/google_checks.xml")
    // 테스트 제외
    sourceSets = [sourceSets.main]
    ignoreFailures = true // <- 에러 무시하고 빌드 계속
}

spotbugs {
    toolVersion = '4.9.3'
    ignoreFailures = true // <- 에러 무시하고 빌드 계속
}

pmd {
    toolVersion = '7.13.0'
    ruleSets = []  // 기본 룰셋 제거
    ruleSetFiles = files("$rootDir/config/pmd/pmd-ruleset.xml")
    sourceSets = [sourceSets.main] // test 제외
    ignoreFailures = true // <- 에러 무시하고 빌드 계속
}

group = 'com.kakaobase'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    maven { url 'https://jitpack.io' }
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'


    //mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    //AWS
    implementation platform("io.awspring.cloud:spring-cloud-aws-dependencies:3.0.2") // BOM
    implementation 'io.awspring.cloud:spring-cloud-aws-starter-s3'

    //MySQL
    implementation 'mysql:mysql-connector-java:8.0.33'

    //JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Spring WebFlux
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    //Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.redisson:redisson-spring-boot-starter:3.20.1'
    implementation('it.ozimov:embedded-redis:0.7.3') {
        exclude group: 'org.slf4j', module: 'slf4j-simple'
    }
    //Connection Pool
    implementation 'io.lettuce:lettuce-core:6.4.0.RELEASE'
    implementation 'org.apache.commons:commons-pool2:2.12.0'

    //thymeleaf
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    //lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'


    //Mockito
    testImplementation 'org.mockito:mockito-core:5.10.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.10.0'

    //Monitroing
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // QueryDSL - OpenFeign
    implementation "io.github.openfeign.querydsl:querydsl-core:6.11"
    implementation "io.github.openfeign.querydsl:querydsl-jpa:6.11"
    annotationProcessor "io.github.openfeign.querydsl:querydsl-apt:6.11:jpa"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //log
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.5.8'

    //test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'com.h2database:h2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    // swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'

    //discord webhook
    implementation 'com.github.napstr:logback-discord-appender:1.0.0'
}


sentry {
    // Generates a JVM (Java, Kotlin, etc.) source bundle and uploads your source code to Sentry.
    // This enables source context, allowing you to see your source
    // code as part of your stack traces in Sentry.
    includeSourceContext = true

    org = "2-7i"
    projectName = "ssmu-dev-backend"
    authToken = System.getenv("SENTRY_AUTH_TOKEN")
}

// build.gradle에 추가
tasks.named('check') {
    dependsOn 'checkstyleMain', 'pmdMain', 'spotbugsMain'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('test') {
    useJUnitPlatform()
}
